class CookieSelected : ZilchComponent
{
    var LeftClickCount : Integer = 0;
    [Dependency]
     var Sprite: Sprite;
     
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Owner, Events.MouseEnter, this.OnMouseEnter);
        Zero.Connect(this.Owner, Events.MouseExit, this.OnMouseExit);
        Zero.Connect(this.Owner, Events.LeftMouseDown, this.OnLeftMouseDown);
        Zero.Connect(this.Owner, Events.MouseUp, this.OnLeftMouseUp);
        // reduce the alpha
        this.Owner.Sprite.Color = this.Owner.Sprite.Color +
        Real4(0.0, 0.0, 0.0, 0.25 - this.Owner.Sprite.Color.W);
    }
    
    function UpdateMouseClickCount()
    {
    // Update the text for the MouseClickCountText
    var mouseClickCounts = new StringBuilder();
    mouseClickCounts.WriteLine("Cookies: `this.LeftClickCount`");
    mouseClickCounts.WriteLine;
    mouseClickCounts.WriteLine("Cookies Per Second:");

    // Turn this stringbuilder into a string that our SpriteText can display:
    this.Owner.SpriteText.Text = mouseClickCounts.ToString();
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        this.UpdateMouseClickCount();
    }
    
    function OnLeftMouseUp(event : ViewportMouseEvent)
    {
    //Update the cookie counter
    this.LeftClickCount += 1;
    }

    function OnLeftMouseDown(event : ViewportMouseEvent)
    {
    this.Owner.Sprite.Color = this.Owner.Sprite.Color +
    Real4(0.0, 0.0, 0.0, 1.0 - this.Owner.Sprite.Color.W);
    }

    function OnMouseExit(event : ViewportMouseEvent)
    {
    // Become dullest to allow it to fade into the background
    this.Owner.Sprite.Color = this.Owner.Sprite.Color +
    Real4(0.0, 0.0, 0.0, 0.25 - this.Owner.Sprite.Color.W);
    }

function OnMouseEnter(event : ViewportMouseEvent)
{
// Become brighter to show you are hovering over the button
this.Owner.Sprite.Color = this.Owner.Sprite.Color +
Real4(0.0, 0.0, 0.0, 0.75 - this.Owner.Sprite.Color.W);
}

}
